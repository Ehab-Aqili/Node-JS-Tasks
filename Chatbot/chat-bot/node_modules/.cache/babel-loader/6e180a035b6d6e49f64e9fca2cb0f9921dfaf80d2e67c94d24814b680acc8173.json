{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nconst configuration = new Configuration({\n  organization: \"org-gNGh2t2WYIC9ERDLsocPHEI3\",\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(configuration);\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chats, setChats] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const chat = async (e, message) => {\n    e.preventDefault();\n    setIsTyping(true);\n    setChats([...chats, {\n      role: \"user\",\n      content: message\n    }]);\n    setMessage(\"\");\n    await openai.createChatCompletion({\n      model: \"gpy-3.5-turbo\",\n      messages: [{\n        role: \"system\",\n        content: \"You are ChatBot. you help with Email writing.\"\n      }, ...chats]\n    }).then(result => {\n      console.log(result);\n    }).catch(err => console.log(err));\n  };\n  return;\n}\n_s(App, \"s/UDCvKwzPNihXdNNpnSqzkHcHY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","configuration","organization","apiKey","openai","App","_s","message","setMessage","chats","setChats","isTyping","setIsTyping","chat","e","preventDefault","role","content","createChatCompletion","model","messages","then","result","console","log","catch","err","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/Node JS/Chatbot/chat-bot/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\n\nconst configuration = new Configuration({\n  organization: \"org-gNGh2t2WYIC9ERDLsocPHEI3\",\n  apiKey: \"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\",\n});\n\nconst openai = new OpenAIApi(configuration);\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const [chats, setChats] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n\n  const chat = async (e, message) => {\n    e.preventDefault();\n    setIsTyping(true);\n    setChats([...chats, { role: \"user\", content: message }]);\n    setMessage(\"\");\n    await openai\n      .createChatCompletion({\n        model: \"gpy-3.5-turbo\",\n        messages: [\n          {\n            role: \"system\",\n            content: \"You are ChatBot. you help with Email writing.\",\n          },\n          ...chats,\n        ],\n      })\n      .then((result) => {\n        console.log(result);\n      })\n      .catch((err) => console.log(err));\n  };\n  return;\n}\nexport default App;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AAEjD,MAAMC,aAAa,GAAG,IAAIF,aAAa,CAAC;EACtCG,YAAY,EAAE,8BAA8B;EAC5CC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAIJ,SAAS,CAACC,aAAa,CAAC;AAE3C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMe,IAAI,GAAG,MAAAA,CAAOC,CAAC,EAAEP,OAAO,KAAK;IACjCO,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,WAAW,CAAC,IAAI,CAAC;IACjBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEO,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEV;IAAQ,CAAC,CAAC,CAAC;IACxDC,UAAU,CAAC,EAAE,CAAC;IACd,MAAMJ,MAAM,CACTc,oBAAoB,CAAC;MACpBC,KAAK,EAAE,eAAe;MACtBC,QAAQ,EAAE,CACR;QACEJ,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE;MACX,CAAC,EACD,GAAGR,KAAK;IAEZ,CAAC,CAAC,CACDY,IAAI,CAAEC,MAAM,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACrB,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC;EACrC,CAAC;EACD;AACF;AAACpB,EAAA,CA3BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}