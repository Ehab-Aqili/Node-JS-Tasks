{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\Desktop\\\\Node JS\\\\Chatbot\\\\chat-bot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst configuration = new Configuration({\n  organization: \"org-gNGh2t2WYIC9ERDLsocPHEI3\",\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(configuration);\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chats, setChats] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const chat = async (e, message) => {\n    e.preventDefault();\n    setIsTyping(true);\n    let mesgs = chats;\n    mesgs.push({\n      role: \"user\",\n      content: message\n    });\n    setChats(mesgs);\n    setMessage(\"\");\n    await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"system\",\n        content: \"You are ChatBot. you help with Email writing.\"\n      }, ...chats]\n    }).then(result => {\n      mesgs.push(result.data.choices[0].message);\n      setChats(mesgs);\n      setIsTyping(false);\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat-Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), isTyping ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"typing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => chat(e, message),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          value: message,\n          placeholder: \"type a message and hit enter\",\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"s/UDCvKwzPNihXdNNpnSqzkHcHY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","jsxDEV","_jsxDEV","Fragment","_Fragment","configuration","organization","apiKey","openai","App","_s","message","setMessage","chats","setChats","isTyping","setIsTyping","chat","e","preventDefault","mesgs","push","role","content","createChatCompletion","model","messages","then","result","data","choices","catch","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/Node JS/Chatbot/chat-bot/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\n\nconst configuration = new Configuration({\n  organization: \"org-gNGh2t2WYIC9ERDLsocPHEI3\",\n  apiKey: \"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\",\n});\n\nconst openai = new OpenAIApi(configuration);\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const [chats, setChats] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n\n  const chat = async (e, message) => {\n    e.preventDefault();\n\n    setIsTyping(true);\n\n    let mesgs = chats;\n    mesgs.push({ role: \"user\", content: message });\n    setChats(mesgs);\n    setMessage(\"\");\n\n    await openai\n      .createChatCompletion({\n        model: \"gpt-3.5-turbo\",\n        messages: [\n          {\n            role: \"system\",\n            content: \"You are ChatBot. you help with Email writing.\",\n          },\n          ...chats,\n        ],\n      })\n      .then((result) => {\n        mesgs.push(result.data.choices[0].message);\n        setChats(mesgs);\n        setIsTyping(false);\n      })\n      .catch((err) => console.log(err));\n  };\n  return (\n    <>\n      <main>\n        <h1>Chat-Bot</h1>\n\n\n        \n        {isTyping ? (\n          <div>\n            <p>\n              <i>typing</i>\n            </p>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <form onSubmit={(e) => chat(e, message)}>\n          <input\n            type=\"text\"\n            name=\"message\"\n            value={message}\n            placeholder=\"type a message and hit enter\"\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </form>\n      </main>\n    </>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}