{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\Desktop\\\\Node JS\\\\Chatbot\\\\chat-bot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst configuration = new Configuration({\n  organization: \"org-gNGh2t2WYIC9ERDLsocPHEI3\",\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(configuration);\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chats, setChats] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const chat = async (e, message) => {\n    e.preventDefault();\n    setIsTyping(true);\n    setChats([...chats, {\n      role: \"user\",\n      content: message\n    }]);\n    setMessage(\"\");\n    await openai.createChatCompletion({\n      model: \"gpy-3.5-turbo\",\n      messages: [{\n        role: \"system\",\n        content: \"You are ChatBot. you help with Email writing.\"\n      }, ...chats]\n    }).then(result => {\n      console.log(result);\n    }).catch(err => console.log(err));\n  };\n  return;\n  /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat-Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), isTyping ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"typing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => chat(e, message),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          value: message,\n          placeholder: \"type a message and hit enter\",\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(App, \"s/UDCvKwzPNihXdNNpnSqzkHcHY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","jsxDEV","_jsxDEV","Fragment","_Fragment","configuration","organization","apiKey","openai","App","_s","message","setMessage","chats","setChats","isTyping","setIsTyping","chat","e","preventDefault","role","content","createChatCompletion","model","messages","then","result","console","log","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/Node JS/Chatbot/chat-bot/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\n\nconst configuration = new Configuration({\n  organization: \"org-gNGh2t2WYIC9ERDLsocPHEI3\",\n  apiKey: \"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\",\n});\n\nconst openai = new OpenAIApi(configuration);\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const [chats, setChats] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n\n  const chat = async (e, message) => {\n    e.preventDefault();\n    setIsTyping(true);\n    setChats([...chats, { role: \"user\", content: message }]);\n    setMessage(\"\");\n    await openai\n      .createChatCompletion({\n        model: \"gpy-3.5-turbo\",\n        messages: [\n          {\n            role: \"system\",\n            content: \"You are ChatBot. you help with Email writing.\",\n          },\n          ...chats,\n        ],\n      })\n      .then((result) => {\n        console.log(result);\n      })\n      .catch((err) => console.log(err));\n  };\n  return\n  <>\n  <main>\n    <h1>Chat-Bot</h1>\n    {isTyping ? (\n      <div>\n        <p>\n          <i>typing</i>\n        </p>\n      </div>\n    ) : (\n      \"\"\n      )}\n    <form onSubmit={(e) => chat(e, message)}>\n      <input\n        type=\"text\"\n        name=\"message\"\n        value={message}\n        placeholder=\"type a message and hit enter\"\n        onChange={(e) => setMessage(e.target.value)}\n        />\n    </form>\n  </main>;\n        </>\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}